version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: algorythmosaiagents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  # Python FastAPI Backend
  api-python:
    build:
      context: ./apps/api-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/algorythmosaiagents
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
    volumes:
      - ./apps/api-python:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Python Celery Worker
  worker-python:
    build:
      context: ./apps/worker-python
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/algorythmosaiagents
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - LINKEDIN_ACCESS_TOKEN=${LINKEDIN_ACCESS_TOKEN}
    volumes:
      - ./apps/worker-python:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ./apps/worker-python
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/algorythmosaiagents
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/worker-python:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A celery_app beat --loglevel=info

  # Legacy Node.js services (commented out)
  # api:
  #   build:
  #     context: ./apps/api
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgresql://postgres:postgres@db:5432/algorythmosaiagents
  #     - REDIS_URL=redis://redis:6379
  #     - MAIL_HOST=mailhog
  #     - MAIL_PORT=1025
  #     - MAIL_FROM=Algorythmos AI Agents <noreply@local.dev>
  #     - DEFAULT_TZ=Europe/Paris
  #   volumes:
  #     - ./apps/api:/app
  #     - /app/node_modules
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   command: npm run dev

  # worker:
  #   build:
  #     context: ./apps/worker
  #     dockerfile: Dockerfile
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgresql://postgres:postgres@db:5432/algorythmosaiagents
  #     - REDIS_URL=redis://redis:6379
  #     - DEFAULT_TZ=Europe/Paris
  #   volumes:
  #     - ./apps/worker:/app
  #     - /app/node_modules
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   command: npm run dev

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-python
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
