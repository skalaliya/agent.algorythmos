apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-python
  namespace: algorythmos-ai-agents
  labels:
    app: worker-python
spec:
  replicas: 2
  selector:
    matchLabels:
      app: worker-python
  template:
    metadata:
      labels:
        app: worker-python
    spec:
      containers:
      - name: worker-python
        image: algorythmos-ai-agents-worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: CELERY_RESULT_BACKEND
        - name: SMTP_SERVER
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: SMTP_SERVER
        - name: SMTP_PORT
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: SMTP_PORT
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: ANTHROPIC_API_KEY
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: SMTP_USERNAME
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: SMTP_PASSWORD
        - name: FROM_EMAIL
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: FROM_EMAIL
        - name: LINKEDIN_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: algorythmos-ai-agents-secrets
              key: LINKEDIN_ACCESS_TOKEN
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: algorythmos-ai-agents
  labels:
    app: celery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      containers:
      - name: celery-beat
        image: algorythmos-ai-agents-worker:latest
        imagePullPolicy: IfNotPresent
        command: ["celery", "-A", "celery_app", "beat", "--loglevel=info"]
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: algorythmos-ai-agents-config
              key: CELERY_RESULT_BACKEND
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
